// WorkerPage.jsx
import { useState, useEffect, useCallback } from "react";
import { useLocation, Link } from "react-router-dom";
import {
  FaPaperPlane,
  FaArrowUp,
  FaFileAlt,
  FaTelegramPlane,
} from "react-icons/fa";
import Axios from "axios";
import userImg from "../../WorkerAssets/user.png";

export default function WorkerPage() {
  const location = useLocation();
  // –ü—Ä–∏ –ª–æ–≥–∏–Ω–µ –º—ã –ø–µ—Ä–µ–¥–∞–ª–∏ userInfo, –Ω–æ —Å–∞–º–∏ —á–∞—Å—ã –±—É–¥–µ–º –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å ¬´—Å–≤–µ–∂–∏–µ¬ª
  const userInfo = location.state?.userInfo || null;

  const [slide, setSlide] = useState(0);
  const [subject, setSubject] = useState("");
  const [startDate, setStartDate] = useState("");
  const [endDate, setEndDate] = useState("");
  const [reason, setReason] = useState("");
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitResult, setSubmitResult] = useState(null);

  const [myMails, setMyMails] = useState([]);
  const [removingId, setRemovingId] = useState(null);

  // –ù–æ–≤—ã–π state, —á—Ç–æ–±—ã —Ö—Ä–∞–Ω–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ (–≤–∫–ª—é—á–∞—è hours_remaining)
  const [employeeData, setEmployeeData] = useState(null);

  const [telegramChatId, setTelegramChatId] = useState(""); // —Ç–µ–∫—É—â–∏–π chat_id, –µ—Å–ª–∏ –ø—Ä–∏–≤—è–∑–∞–Ω
  const [isLinkLoading, setIsLinkLoading] = useState(true); // —Ñ–ª–∞–≥ –≤–æ –≤—Ä–µ–º—è GET-–∑–∞–ø—Ä–æ—Å–∞
  const [showLinkForm, setShowLinkForm] = useState(false); // –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ñ–æ—Ä–º—É –ø—Ä–∏–≤—è–∑–∫–∏
  const [newChatIdInput, setNewChatIdInput] = useState("");

  // –ï—Å–ª–∏ userInfo –Ω–µ—Ç (–∑–∞–ª–æ–≥–∏–Ω–µ–Ω –Ω–µ –ø–æ —Å—Å—ã–ª–∫–µ), –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º ¬´–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö¬ª
  if (!userInfo) return <div className="workerPage">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</div>;
  // –ò–∑ userInfo –¥–æ—Å—Ç–∞—ë–º —Ç–æ–ª—å–∫–æ ID, –∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ø–æ–¥–≥—Ä—É–∂–∞–µ–º —Å–æ —Å–≤–µ–∂–∏–º–∏ —á–∞—Å–∞–º–∏
  const u = userInfo[0];
  const empId = u.employee_id;

  // –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø–æ–ª—É—á–∏–ª–∏ userInfo (–º–∞—Å—Å–∏–≤ —Å –æ–¥–Ω–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º),
  // –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–≤—è–∑—å:
  useEffect(() => {
    if (!userInfo) return;
    const empId = userInfo[0].employee_id;

    Axios.get(`http://localhost:3002/telegram-links/${empId}`)
      .then(({ data }) => {
        setTelegramChatId(data.telegram_chat_id);
      })
      .catch((err) => {
        // –ï—Å–ª–∏ 404 (—Å–≤—è–∑–∏ –Ω–µ—Ç) ‚Äî –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
        if (err.response?.status !== 404) {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ Telegram-—Å–≤—è–∑–∏:", err);
        }
      })
      .finally(() => {
        setIsLinkLoading(false);
      });
  }, [userInfo]);

  // POST /telegram-links  ‚Äî  —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–≤—è–∑—å
  const handleLinkTelegram = async () => {
    if (!userInfo) return;
    const empId = userInfo[0].employee_id;

    try {
      await Axios.post("http://localhost:3002/telegram-links", {
        employee_id: empId,
        telegram_chat_id: newChatIdInput.trim(),
      });
      // –ü–æ—Å–ª–µ —É—Å–ø–µ—Ö–∞:
      setTelegramChatId(newChatIdInput.trim());
      setNewChatIdInput("");
      setShowLinkForm(false);
      alert("Telegram —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω!");
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ Telegram:", err);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–≤—è–∑–∞—Ç—å Telegram. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }
  };

  // DELETE /telegram-links/:employee_id  ‚Äî –æ—Ç–≤—è–∑–∞—Ç—å
  const handleUnlinkTelegram = async () => {
    if (!userInfo) return;
    const empId = userInfo[0].employee_id;

    if (!window.confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–≤—è–∑–∞—Ç—å Telegram?")) {
      return;
    }

    try {
      await Axios.delete(`http://localhost:3002/telegram-links/${empId}`);
      setTelegramChatId("");
      alert("Telegram –æ—Ç–≤—è–∑–∞–Ω.");
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–≤—è–∑–∫–∏ Telegram:", err);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–≤—è–∑–∞—Ç—å Telegram. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }
  };

  // 1) –ó–∞–≥—Ä—É–∑–∫–∞ ¬´—Å–≤–µ–∂–∏—Ö¬ª –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–≤ —Ç–æ–º —á–∏—Å–ª–µ hours_remaining)
  const fetchEmployeeData = useCallback(() => {
    Axios.get(`http://localhost:3002/employees/${empId}`)
      .then(({ data }) => {
        setEmployeeData(data);
      })
      .catch((err) => {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è:", err);
      });
  }, [empId]);

  // 2) –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–ª–µ–Ω–∏–π
  const fetchMyMails = useCallback(() => {
    Axios.get(`http://localhost:3002/mails/employee/${empId}`)
      .then(({ data }) => setMyMails(data))
      .catch(console.error);
  }, [empId]);

  useEffect(() => {
    // –ü—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Ä–∞–∑—É –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∏ —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–ª–µ–Ω–∏–π
    fetchEmployeeData();
    fetchMyMails();
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É body, –ø–æ–∫–∞ –æ—Ç–∫—Ä—ã—Ç —ç—Ç–æ—Ç —ç–∫—Ä–∞–Ω
    document.body.style.overflow = "hidden";
    return () => {
      document.body.style.overflow = "";
    };
  }, [fetchEmployeeData, fetchMyMails]);

  // –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ –∑–∞—è–≤–ª–µ–Ω–∏—è –∏–ª–∏ –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –≤ –º—ç–π–ª-–¥–µ—Ç–∞–ª–µ
  // –±—É–¥–µ–º —Å–±—Ä–∞—Å—ã–≤–∞—Ç—å submitResult, —á—Ç–æ–±—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–Ω–æ–≤–æ —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–ª–µ–Ω–∏–π
  useEffect(() => {
    if (submitResult !== null) {
      fetchMyMails();
      fetchEmployeeData(); // –ø–µ—Ä–µ—Å—á–∏—Ç–∞–µ–º —á–∞—Å—ã —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏/–æ–¥–æ–±—Ä–µ–Ω–∏—è
    }
  }, [fetchMyMails, fetchEmployeeData, submitResult]);

  // –ï—Å–ª–∏ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ–π ¬´–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶¬ª
  if (!employeeData)
    return (
      <div className="workerPage">
        <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è‚Ä¶</div>
      </div>
    );

  // –î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –Ω–∞–∑–æ–≤—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `e`:
  const e = employeeData;

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–ª–µ–Ω–∏—è (—Å–ª–∞–π–¥ 1)
  const handleSubmit = async (evt) => {
    evt.preventDefault();
    setIsSubmitting(true);
    setSubmitResult(null);
    try {
      await Axios.post("http://localhost:3002/mails", {
        employee_id: empId,
        subject,
        start_date: startDate,
        end_date: endDate,
        reason,
      });
      setSubmitResult("success");
      setSubject("");
      setStartDate("");
      setEndDate("");
      setReason("");
      // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–∞—Ä—Ç–æ—á–∫–µ –ø—Ä–æ—Ñ–∏–ª—è
      setSlide(0);
    } catch {
      setSubmitResult("error");
    } finally {
      setIsSubmitting(false);
    }
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á—ë—Ç–∞ (—Å–ª–∞–π–¥ 2)
  const handleReportSubmit = async (evt) => {
    evt.preventDefault();
    const formData = new FormData(evt.target);
    const reportData = Object.fromEntries(formData.entries());

    try {
      await Axios.post("http://localhost:3002/reports", {
        employee_id: empId,
        ...reportData,
      });
      alert("‚úÖ –û—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
      evt.target.reset();
      // –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–∞—Ä—Ç–æ—á–∫–µ –ø—Ä–æ—Ñ–∏–ª—è
      setSlide(0);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á—ë—Ç–∞:", error);
      alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á—ë—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }
  };

  // –ü–µ—Ä–µ–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–ª–µ–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–∏–π
  const translateStatus = (status) => {
    if (status === "approved") return "–ü—Ä–∏–Ω—è—Ç–æ";
    if (status === "rejected") return "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ";
    return "–í –æ–∂–∏–¥–∞–Ω–∏–∏";
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ (¬´–ø—Ä–æ—á–∏—Ç–∞–Ω–æ¬ª) –∑–∞—è–≤–ª–µ–Ω–∏—è
  const markRead = async (id) => {
    const el = document.getElementById(`mail-${id}`);
    if (!el) return;

    // –î–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –≤—ã—á–∏—Å–ª—è–µ–º —Ç–µ–∫—É—â—É—é –≤—ã—Å–æ—Ç—É –∏ –∑–∞–¥–∞—ë–º –µ—ë –∫–∞–∫ inline max-height
    const height = el.scrollHeight;
    el.style.maxHeight = `${height}px`;

    requestAnimationFrame(() => {
      setRemovingId(id);
    });

    try {
      await Axios.delete(`http://localhost:3002/mails/${id}`);
      setTimeout(() => {
        setMyMails((prev) => prev.filter((m) => m.id !== id));
        el.style.maxHeight = "";
      }, 400);
    } catch (err) {
      console.error(err);
      setRemovingId(null);
      el.style.maxHeight = "";
    }
  };

  return (
    <div className="workerPage">
      <div className="background">
        <div className="stars">
          <div id="stars" />
          <div id="stars2" />
          <div id="stars3" />
        </div>
      </div>

      {/* –ï—Å–ª–∏ —Å–≤—è–∑—å –µ—â—ë –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è ‚Äî –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Å—Ç–æ–π ‚ÄúLoading‚Ä¶‚Äù –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º */}
      {isLinkLoading && (
        <div className="telegram-loading">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ Telegram‚Ä¶</div>
      )}

      {/* ================== –ö–Ω–æ–ø–∫–∞ ¬´Telegram¬ª ================== */}
      {!isLinkLoading && (
        <div className="telegram-link-wrapper">
          {telegramChatId ? (
            <>
              <span className="telegram-bound-info">
                üì≤ –ü—Ä–∏–≤—è–∑–∞–Ω: <b>{telegramChatId}</b>
              </span>
              <button
                className="unlink-btn"
                onClick={handleUnlinkTelegram}
                title="–û—Ç–≤—è–∑–∞—Ç—å Telegram"
              >
                –û—Ç–≤—è–∑–∞—Ç—å
              </button>
            </>
          ) : (
            <button
              className="link-btn"
              onClick={() => setShowLinkForm(true)}
              title="–ü—Ä–∏–≤—è–∑–∞—Ç—å Telegram"
            >
              <FaTelegramPlane size={24} />
              <span className="link-label">–ü—Ä–∏–≤—è–∑–∞—Ç—å Telegram</span>
            </button>
          )}
        </div>
      )}

      {/* –ï—Å–ª–∏ showLinkForm === true ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ–±–æ–ª—å—à—É—é —Ñ–æ—Ä–º—É */}
      {showLinkForm && (
        <div className="telegram-form-overlay">
          <div className="telegram-form-card">
            <h3>–ü—Ä–∏–≤—è–∑–∫–∞ Telegram</h3>
            <p>–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π Telegram Chat ID:</p>
            <input
              type="text"
              value={newChatIdInput}
              onChange={(e) => setNewChatIdInput(e.target.value)}
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, 123456789"
            />
            <div className="telegram-form-buttons">
              <button
                className="btn"
                onClick={handleLinkTelegram}
                disabled={!newChatIdInput.trim()}
              >
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
              </button>
              <button
                className="btn cancel"
                onClick={() => {
                  setNewChatIdInput("");
                  setShowLinkForm(false);
                }}
              >
                –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </div>
        </div>
      )}

      {/* –û–≤–µ—Ä–ª–µ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ/—Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ */}
      {(isSubmitting || submitResult) && (
        <div className="notify-overlay">
          <div className="notify-card">
            {isSubmitting && <p>–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–ª–µ–Ω–∏–µ...</p>}
            {submitResult === "success" && <p>‚úÖ –ó–∞—è–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!</p>}
            {submitResult === "error" && <p>‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ.</p>}
            {submitResult && (
              <button
                className="btn"
                onClick={() => {
                  setSubmitResult(null);
                  setSlide(0);
                }}
              >
                –û–ö
              </button>
            )}
          </div>
        </div>
      )}

      {/* ======================================
            –ö–æ–ª–æ–Ω–∫–∞ —Å —Ç—Ä–µ–º—è ¬´—Å–ª–∞–π–¥–∞–º–∏¬ª
         ====================================== */}
      <div
        className="slides"
        style={{ transform: `translateY(-${slide * 100}vh)` }}
      >
        {/* ------------------------------------------------------
            –°–ª–∞–π–¥ 0: –ü—Ä–æ—Ñ–∏–ª—å + —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∑–∞—è–≤–ª–µ–Ω–∏–π + –∏–∫–æ–Ω–∫–∏
            ------------------------------------------------------ */}
        <section className="halfSection top">
          <div className="workerUpInfo">
            <div className="workerImgInfo">
              <img src={userImg} alt="user" />
            </div>
            <div className="workerMainInfo">
              <ul>
                <li>–ò–º—è: {e.first_name}</li>
                <li>–§–∞–º–∏–ª–∏—è: {e.last_name}</li>
                <li>–ü–æ—á—Ç–∞: {e.email}</li>
                <li>–¢–µ–ª–µ—Ñ–æ–Ω: {e.phone_number}</li>
                <li>
                  –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã: {e.hire_date.match(/\d{4}-\d{2}-\d{2}/)[0]}
                </li>
                <li>–î–æ–ª–∂–Ω–æ—Å—Ç—å: {e.job_title}</li>
                <li>–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {e.qualification}</li>
                <li>–ó–∞—Ä–ø–ª–∞—Ç–∞: {e.salary}</li>
                {/* –ó–¥–µ—Å—å –ø–æ–∫–∞–∑—ã–≤–∞–µ–º ¬´–û—Å—Ç–∞–≤—à–∏–µ—Å—è —á–∞—Å—ã¬ª */}
                <li>
                  –û—Å—Ç–∞–≤—à–∏–µ—Å—è —á–∞—Å—ã –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ:{" "}
                  <strong>{e.hours_remaining}</strong>
                </li>
              </ul>
            </div>

            <div className="my-mails">
              <h3>–ú–æ–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è</h3>
              {myMails.length ? (
                <ul className="my-mails-list">
                  {myMails.map((m) => (
                    <li
                      id={`mail-${m.id}`}
                      key={m.id}
                      className={`my-mail-card ${
                        removingId === m.id ? "removing" : ""
                      }`}
                    >
                      <button
                        className="mark-read-btn"
                        onClick={() => markRead(m.id)}
                        title="–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ"
                      >
                        ‚úì
                      </button>
                      <div>
                        <strong>–¢–µ–º–∞:</strong> {m.subject}
                      </div>
                      <div>
                        <strong>–ü–µ—Ä–∏–æ–¥:</strong>{" "}
                        {m.start_date.match(/\d{4}-\d{2}-\d{2}/)[0]} ‚Äî{" "}
                        {m.end_date.match(/\d{4}-\d{2}-\d{2}/)[0]}
                      </div>
                      <div>
                        <strong>–°—Ç–∞—Ç—É—Å:</strong>{" "}
                        {translateStatus(m.mail_status)}
                      </div>
                      {m.admin_comment && (
                        <div className="admin-comment">
                          <strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</strong> {m.admin_comment}
                        </div>
                      )}
                    </li>
                  ))}
                </ul>
              ) : (
                <p>–ó–∞—è–≤–ª–µ–Ω–∏–π –Ω–µ—Ç.</p>
              )}
            </div>

            {/* –ò–∫–æ–Ω–∫–∏ —Å —è–∫–æ—Ä—è–º–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Ñ–æ—Ä–º–∞–º */}
            <div
              className="anchorIcon mail-icon"
              onClick={() => setSlide(1)}
              title="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ"
            >
              <FaPaperPlane size={24} />
            </div>
            <div
              className="anchorIcon report-icon"
              onClick={() => setSlide(2)}
              title="–î–æ–±–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç"
            >
              <FaFileAlt size={24} />
            </div>
          </div>
        </section>

        {/* ------------------------------------------------------
            –°–ª–∞–π–¥ 1: –§–æ—Ä–º–∞ ‚Äú–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ‚Äù
            ------------------------------------------------------ */}
        <section className="halfSection bottom">
          <div className="requestForm">
            <h2>–ó–∞—è–≤–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</h2>
            <form onSubmit={handleSubmit}>
              <div className="form-group">
                <label>–¢–µ–º–∞ –∑–∞—è–≤–ª–µ–Ω–∏—è</label>
                <select
                  value={subject}
                  onChange={(e) => setSubject(e.target.value)}
                  required
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É</option>
                  <option>–û—Ç–ø—É—Å–∫</option>
                  <option>–û—Ç–≥—É–ª</option>
                  <option>–ë–æ–ª—å–Ω–∏—á–Ω—ã–π</option>
                </select>
              </div>
              <div className="form-group dates">
                <div>
                  <label>–°</label>
                  <input
                    type="date"
                    value={startDate}
                    onChange={(e) => setStartDate(e.target.value)}
                    required
                  />
                </div>
                <div>
                  <label>–ü–æ</label>
                  <input
                    type="date"
                    value={endDate}
                    onChange={(e) => setEndDate(e.target.value)}
                    required
                  />
                </div>
              </div>
              <div className="form-group">
                <label>–ü—Ä–∏—á–∏–Ω–∞</label>
                <textarea
                  rows="4"
                  placeholder="–û–ø–∏—à–∏—Ç–µ..."
                  value={reason}
                  onChange={(e) => setReason(e.target.value)}
                  required
                />
              </div>
              <div className="form-buttons">
                <button type="submit" className="btn">
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ
                </button>
              </div>
            </form>
            <div
              className="anchorIcon"
              onClick={() => setSlide(0)}
              title="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø—Ä–æ—Ñ–∏–ª—é"
            >
              <FaArrowUp size={24} />
            </div>
          </div>
        </section>

        {/* ------------------------------------------------------
            –°–ª–∞–π–¥ 2: –§–æ—Ä–º–∞ ‚Äú–î–æ–±–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç‚Äù
            ------------------------------------------------------ */}
        <section className="halfSection report-section">
          <div className="requestForm">
            <h2>–î–æ–±–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç</h2>
            <form onSubmit={handleReportSubmit}>
              <div className="form-group">
                <label>–î–∞—Ç–∞ –æ—Ç—á—ë—Ç–∞</label>
                <input type="date" name="report_date" required />
              </div>
              <div className="form-group">
                <label>–û–ø–∏—Å–∞–Ω–∏–µ</label>
                <textarea
                  name="report_description"
                  rows="3"
                  placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"
                  required
                />
              </div>
              <div className="form-group">
                <label>–î–∞–Ω–Ω—ã–µ –æ—Ç—á—ë—Ç–∞</label>
                <input
                  type="text"
                  name="report_data"
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, 12345"
                  required
                />
              </div>
              <div className="form-group">
                <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
                <textarea
                  name="report_notes"
                  rows="2"
                  placeholder="–î–æ–ø. –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
                />
              </div>
              <div className="form-buttons">
                <button type="submit" className="btn">
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç
                </button>
              </div>
            </form>
            <div
              className="anchorIcon"
              onClick={() => setSlide(0)}
              title="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø—Ä–æ—Ñ–∏–ª—é"
            >
              <FaArrowUp size={24} />
            </div>
          </div>
        </section>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ ¬´–í—ã–π—Ç–∏¬ª –≤–Ω–∏–∑—É */}
      <div className="workerDownButton">
        <Link to="/" className="btn">
          –í—ã–π—Ç–∏
        </Link>
      </div>
    </div>
  );
}
